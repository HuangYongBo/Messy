/********************          主要功能           ***********************/
此包的实现的主要功能：
	将裸配置文件数据读出，并生成二进制文件。即将配置数据如0x11(4个字节)以单个
     字节的形式存储到生成文件当中合适的位置。

生成文件的分区格式：
	第0   个字节存储一共有多少个配置数据；
	第1   个字节开始存储cfg_info信息，一共存储10个结构体，大小为 1 ~ 10*sizeof cfg_info
	第1+10*sizeof cfg_info 个字节开始，存放cfg_data，默认设置10个区域，每个区域512个字节

则一共需要的空间为：
	（sizeof cfg_info+512）*10 +1 Byte
	



/*********************          文件说明         ************************/
read_cfg.c         源码文件 >> mv read_cfg.c cfg2bin.c
read_cfg.h         源码文件
gt911_cfg.cfg      裸配置文件


read_data_in_drvier.c 在内核读取配置分区数据
read_data_in_app.c    在应用层下读取配置分区数据


/*********************          使用说明         ************************/
read_cfg.h 中个全局变量TYPE存放配置数据的类型，该结构体内容亦说明了最后生成文件中
最多会有的配置数据类型。当前结构体内容只有”touch_cfg"和”key_cfg"。事实上目前分配
大部分空间都是保留的。


需要将裸配置文件变成分区文件，执行命令如下：

	gcc read_cfg.c -o read_cfg   //编译源码生成可执行文件
	./read_cfg gt911_cfg.cfg touch_cfg    //第二个参数是裸配置文件；第三个参数说明该裸配置文件是什么
					     //类型的裸数据，根据类型将数据写到不同的位置
					  

	执行完后会在当前目录下生成一个cfg_data.bin


/*********************          函数说明         ************************/


char char2num(char c);
功  能 ：  将字符'0'~'9'、'a'('A')~'f'('F') 变成数字0~15
参  数 ：  c： 将被转化为数字的字符
返回值 ：  如果c属于0~F中的字符，则会转化为对应的10进制数；
	否则返回-1；

例程：char2num('a'); 返回值为10


int main(int argc,char *argv[])
功能：将argv[1]这个裸配置数据文件的数据读出，并将其存放到数组当中，再将数组
	写入到文件config_data.cfg中

	
